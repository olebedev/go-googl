package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

// URL Url
// swagger:model Url
type URL struct {

	// A summary of the click analytics for the short and long URL. Might not be present if not requested or currently unavailable.
	Analytics *AnalyticsSummary `json:"analytics,omitempty"`

	// Time the short URL was created; ISO 8601 representation using the yyyy-MM-dd'T'HH:mm:ss.SSSZZ format, e.g. "2010-10-14T19:01:24.944+00:00".
	Created string `json:"created,omitempty"`

	// Short URL, e.g. "http://goo.gl/l6MS".
	ID string `json:"id,omitempty"`

	// The fixed string "urlshortener#url".
	Kind *string `json:"kind,omitempty"`

	// Long URL, e.g. "http://www.google.com/". Might not be present if the status is "REMOVED".
	LongURL string `json:"longUrl,omitempty"`

	// Status of the target URL. Possible values: "OK", "MALWARE", "PHISHING", or "REMOVED". A URL might be marked "REMOVED" if it was flagged as spam, for example.
	Status string `json:"status,omitempty"`
}

// Validate validates this Url
func (m *URL) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAnalytics(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *URL) validateAnalytics(formats strfmt.Registry) error {

	if swag.IsZero(m.Analytics) { // not required
		return nil
	}

	if m.Analytics != nil {

		if err := m.Analytics.Validate(formats); err != nil {
			return err
		}
	}

	return nil
}
