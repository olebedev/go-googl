package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

// URLHistory Url history
// swagger:model UrlHistory
type URLHistory struct {

	// A list of URL resources.
	Items []*URL `json:"items"`

	// Number of items returned with each full "page" of results. Note that the last page could have fewer items than the "itemsPerPage" value.
	ItemsPerPage int32 `json:"itemsPerPage,omitempty"`

	// The fixed string "urlshortener#urlHistory".
	Kind *string `json:"kind,omitempty"`

	// A token to provide to get the next page of results.
	NextPageToken string `json:"nextPageToken,omitempty"`

	// Total number of short URLs associated with this user (may be approximate).
	TotalItems int32 `json:"totalItems,omitempty"`
}

// Validate validates this Url history
func (m *URLHistory) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateItems(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *URLHistory) validateItems(formats strfmt.Registry) error {

	if swag.IsZero(m.Items) { // not required
		return nil
	}

	for i := 0; i < len(m.Items); i++ {

		if swag.IsZero(m.Items[i]) { // not required
			continue
		}

		if m.Items[i] != nil {

			if err := m.Items[i].Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}
